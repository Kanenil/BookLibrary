<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGrid.AlternateRow.Background}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DataGrid.Static.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
        <Setter Property="FontFamily" Value="/Fonts/#Montserrat"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource DataGrid.Column.Header.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGrid.Column.Header.Static.Foreground}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" >
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <StackPanel Grid.Column="1"
                                            Orientation="Horizontal"
                                            Margin="5,0,0,0">
                                    <Path x:Name="SortUpIcon"
                                          Data="{DynamicResource SortUp}"
                                          Height="{TemplateBinding FontSize}"
                                          Fill="{DynamicResource DataGrid.Column.Header.Icon.Static}"
                                          Stretch="Uniform"
                                          Width="10"/>
                                    <Path x:Name="SortDownIcon"
                                          Data="{DynamicResource SortDown}"
                                          Height="{TemplateBinding FontSize}"
                                          Fill="{DynamicResource DataGrid.Column.Header.Icon.Static}"
                                          Stretch="Uniform"
                                          Width="10"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortDownIcon"
                                    Property="Fill"
                                    Value="{DynamicResource Sort.Up.Icon.Active}"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortUpIcon"
                                    Property="Fill"
                                    Value="{DynamicResource Sort.Up.Icon.Active}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGridCell">
        <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#region RowDetailsTemplates-->
    <!--#region Books Template-->
    <DataTemplate x:Key="RowDetailsTemplate" x:Name="DataTemplate">
        <Border Margin="5"
                BorderThickness="1"
                BorderBrush="{DynamicResource DataGrid.Row.Details.Static.BorderBrush}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Margin="5">
                    <Run Text="Price:"/>
                    <Run Text="{Binding OldPrice}" TextDecorations="{Binding IsDiscount}"/>
                    <LineBreak/>
                    <Run Text="Count:"/>
                    <Run Text="{Binding Count}"/>
                    <LineBreak/>
                    <Run Text="Pages:"/>
                    <Run Text="{Binding CountPage}"/>
                    <LineBreak/>
                    <Run Text="Pulished:"/>
                    <Run Text="{Binding Year}"/>
                </TextBlock>
                <TextBlock Margin="5" Visibility="{Binding Discount}">
                    <Run Text="New Price: "/>
                    <Run Text="{Binding PriceForSale}"/>
                    <LineBreak/>
                    <Run Text="Discount: "/>
                    <Run Text="{Binding ActionBook.Discount}"/>
                    <Run Text="%"/>
                    <LineBreak/>
                    <Run Text="Ends: "/>
                    <Run Text="{Binding ActionBook.End}"/>
                </TextBlock>
                <xctk:IntegerUpDown Name="busketControl"
                                    Minimum="1"
                                    Maximum="{Binding Count}"
                                    Height="20"
                                    DefaultValue="1"
                                    Value="1"
                                    AllowTextInput="False"/>
                <Button Command="{Binding BusketCommand}"
                        CommandParameter="{Binding ElementName=busketControl,Path=Value}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource car}"
                            Background="{DynamicResource PrimaryBackgroundColor}"
                            Margin="2">
                </Button>
                <xctk:IntegerUpDown Name="deleteControl"
                                    Visibility="{Binding AdminMenu}"
                                    Minimum="1"
                                    Maximum="{Binding Count}"
                                    Height="20"
                                    DefaultValue="1"
                                    Value="1"
                                    AllowTextInput="False"/>
                <Button Command="{Binding RemoveCommand}"
                        CommandParameter="{Binding ElementName=deleteControl,Path=Value}"
                            Visibility="{Binding AdminMenu}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource Trash}"
                            Background="Red"
                            Margin="2">
                </Button>
                <Button Command="{Binding EditCommand}"
                            Visibility="{Binding AdminMenu}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource Edit}"
                            Background="{DynamicResource PrimaryBlueColor}"
                            Margin="2">
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>
    <!--#endregion-->
    <!--#region Authors & Actions & Publishers Template-->
    <DataTemplate x:Key="RowDetailsTemplate1" x:Name="DataTemplate1">
        <Border Margin="5"
                BorderThickness="1"
                BorderBrush="{DynamicResource DataGrid.Row.Details.Static.BorderBrush}">
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding RemoveCommand}"
                            Visibility="{Binding AdminMenu}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource Trash}"
                            Background="Red"
                            Margin="2">
                </Button>
                <Button Command="{Binding EditCommand}"
                            Visibility="{Binding AdminMenu}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource Edit}"
                            Background="{DynamicResource PrimaryBlueColor}"
                            Margin="2"/>

            </StackPanel>
        </Border>
    </DataTemplate>
    <!--#endregion-->
    <!--#region Out Stock Template-->
    <DataTemplate x:Key="RowDetailsTemplate2" x:Name="DataTemplate2">
        <Border Margin="5"
                BorderThickness="1"
                BorderBrush="{DynamicResource DataGrid.Row.Details.Static.BorderBrush}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Margin="5">
                    <Run Text="Price:"/>
                    <Run Text="{Binding OldPrice}" TextDecorations="{Binding IsDiscount}"/>
                    <LineBreak/>
                    <Run Text="Count:"/>
                    <Run Text="{Binding Count}"/>
                    <LineBreak/>
                    <Run Text="Pages:"/>
                    <Run Text="{Binding CountPage}"/>
                    <LineBreak/>
                    <Run Text="Pulished:"/>
                    <Run Text="{Binding Year}"/>
                </TextBlock>
                <TextBlock Margin="5" Visibility="{Binding Discount}">
                    <Run Text="New Price: "/>
                    <Run Text="{Binding PriceForSale}"/>
                    <LineBreak/>
                    <Run Text="Discount: "/>
                    <Run Text="{Binding ActionBook.Discount}"/>
                    <Run Text="%"/>
                    <LineBreak/>
                    <Run Text="Ends: "/>
                    <Run Text="{Binding ActionBook.End}"/>
                </TextBlock>
                <xctk:IntegerUpDown Name="addControl"
                                    Minimum="1"
                                    Width="50"
                                    Value="1"
                                    AllowTextInput="False"/>
                <Button Command="{Binding EditCommand}"
                        CommandParameter="{Binding ElementName=addControl,Path=Value}"
                            Visibility="{Binding AdminMenu}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource plus}"
                            Background="Green"
                            Margin="2"/>
                <Button Command="{Binding RemoveCommand}"
                            Visibility="{Binding AdminMenu}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource Trash}"
                            Background="Red"
                            Margin="2"/>



            </StackPanel>
        </Border>
    </DataTemplate>
    <!--#endregion-->
    <!--#region Users Template-->
    <DataTemplate x:Key="RowDetailsTemplate3" x:Name="DataTemplate3">
        <Border Margin="5"
                BorderThickness="1"
                BorderBrush="{DynamicResource DataGrid.Row.Details.Static.BorderBrush}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal"
                            Grid.Row="0">
                    <Button Command="{Binding EditCommand}"
                            Visibility="{Binding AddAdmin}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource plus}"
                            Background="Green"
                            Margin="2"/>
                    <Button Command="{Binding RemoveCommand}"
                            Visibility="{Binding AddAdmin}"
                            Style="{StaticResource IconButtonsStyle}"
                            Content="{DynamicResource Trash}"
                            Background="Red"
                            Margin="2"/>
                </StackPanel>
                <Border Grid.Row="1"
                        Visibility="{Binding AdminMenu}"
                        MaxHeight="250"
                    Margin="5"
                    CornerRadius="20"
                    BorderThickness="2"
                    Background="{DynamicResource PrimaryBackgroundColor}"
                    BorderBrush="{DynamicResource PrimaryBlueColor}">
                    <ListBox Margin="10"
                     Style="{DynamicResource ListBoxStyle1}" 
                     ItemsPanel="{DynamicResource ItemsPanelTemplate1}"
                     ItemsSource="{Binding Books,UpdateSourceTrigger=PropertyChanged}"
                     SelectedItem="{Binding Selected,UpdateSourceTrigger=PropertyChanged}"
                             >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="IsSelected" Value="True"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Border>


            </Grid>
        </Border>
    </DataTemplate>
    <!--#endregion-->
    <!--#endregion-->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}" ContentTemplate="{DynamicResource RowDetailsTemplate}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="DetailsVisibility" Value="Visible"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>